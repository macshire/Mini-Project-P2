{"ast":null,"code":"var _jsxFileName = \"/home/maximilian/Desktop/Mini-Project/src/components/Reviews/index.js\",\n  _s = $RefreshSig$();\nimport '../About.css';\nimport { Rate } from './StarRating';\nimport { useOutletContext } from 'react-router-dom';\nimport booksData from '../../data/booksData';\nimport InputLabel from '@mui/material/InputLabel';\nimport About from '../About';\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nimport axios from 'axios';\nimport '../Layout';\nimport StarRating from './StarRating';\nimport { object } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = ({\n  review,\n  users\n}) => {\n  _s();\n  const {\n    title,\n    url,\n    author,\n    num_comments,\n    image,\n    points,\n    objectID\n  } = review;\n  const [reviewText, setReviewText] = useState('');\n  const {\n    isLoggedIn,\n    userId\n  } = useOutletContext();\n  console.log('User Logged In:', isLoggedIn);\n  console.log('User ID:', userId);\n  const handleTextChange = event => {\n    setReviewText(event.target.value); // Update state with the textarea value\n    setUserReviews(reviewText);\n  };\n  const processUserInfo = () => {\n    if (isLoggedIn) {\n      console.log(`User ID: ${userId}`);\n    } else {\n      console.log('User is not logged in.');\n    }\n  };\n  const [userReviews, setUserReviews] = useState([]);\n\n  //call at beginning of function so that it immediately checks for users instead of only checking after the account is made\n\n  const [newRating, setNewRating] = useState(0);\n  const [isReviewCreated, setIsReviewCreated] = useState(false);\n  const handleRatingChange = rating => {\n    setNewRating(rating); // Update the newRating state\n  };\n  const handleCreateReview = () => {\n    console.log(userReviews);\n    console.log(\"idk\" + newRating);\n    console.log(userId);\n    console.log(objectID);\n    if (!isLoggedIn) {\n      alert(\"Please log in to add a review\");\n      return; // Exit the function early if not logged in\n    }\n\n    // Proceed to create a review if the user is logged in\n    axios.post('http://localhost:7000/comment', {\n      id: userId,\n      review: userReviews,\n      stars: newRating,\n      bookID: objectID,\n      created_at: new Date().toISOString() // Use current date and time\n    }).then(response => {\n      console.log(\"Added review\", response.data);\n      alert(\"Review successfully added\");\n      setIsReviewCreated(true);\n      // fetchUserReviews();\n    }).catch(error => {\n      console.log(\"Didn't add review\", error);\n    });\n  };\n\n  // Function to fetch user reviews\n  const fetchUserReviews = () => {\n    axios.get('http://localhost:7000/reviews').then(response => {\n      setUserReviews(response.data); // Update state with the reviews\n      console.log(\"get works\");\n    }).catch(error => {\n      console.error('There was an error fetching the reviews!', error);\n    });\n  };\n\n  // useEffect to fetch reviews when the component mounts\n  useEffect(() => {\n    fetchUserReviews();\n    setIsReviewCreated(false);\n    console.log(\"why\");\n  }, [isReviewCreated]); // Empty dependency array to run on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviewBig\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          className: \"reviewImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviewTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviewTitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          col: \"30\",\n          rows: \"20\",\n          type: \"text\",\n          id: \"reviewText\",\n          placeholder: \"Leave a Review!\",\n          value: reviewText,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rateStyle\",\n          children: /*#__PURE__*/_jsxDEV(Rate, {\n            starR: newRating,\n            onRatingChange: handleRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reviewButton\",\n          onClick: handleCreateReview,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }, this);\n};\n_s(Review, \"lx/6UKpeMcqGWWuIm1WaxI2boWk=\", false, function () {\n  return [useOutletContext];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["Rate","useOutletContext","booksData","InputLabel","About","React","useEffect","useState","createContext","useContext","axios","StarRating","object","jsxDEV","_jsxDEV","Review","review","users","_s","title","url","author","num_comments","image","points","objectID","reviewText","setReviewText","isLoggedIn","userId","console","log","handleTextChange","event","target","value","setUserReviews","processUserInfo","userReviews","newRating","setNewRating","isReviewCreated","setIsReviewCreated","handleRatingChange","rating","handleCreateReview","alert","post","id","stars","bookID","created_at","Date","toISOString","then","response","data","catch","error","fetchUserReviews","get","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","col","rows","type","placeholder","onChange","starR","onRatingChange","onClick","_c","$RefreshReg$"],"sources":["/home/maximilian/Desktop/Mini-Project/src/components/Reviews/index.js"],"sourcesContent":["import '../About.css';\nimport { Rate } from './StarRating';\nimport { useOutletContext } from 'react-router-dom';\n\nimport booksData from '../../data/booksData';\nimport InputLabel from '@mui/material/InputLabel';\nimport About from '../About';\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nimport axios from 'axios';\nimport '../Layout';\nimport StarRating from './StarRating';\nimport { object } from 'prop-types';\nconst Review = ({ review, users}) => {\n    const {\n      title,\n      url,\n      author,\n      num_comments,\n      image,\n      points,\n      objectID,\n    } = review;\n\n    const [reviewText, setReviewText] = useState('');\n    const { isLoggedIn, userId } = useOutletContext();\n    console.log('User Logged In:', isLoggedIn);\n    console.log('User ID:', userId);\n    const handleTextChange = (event) => {\n      setReviewText(event.target.value); // Update state with the textarea value\n      setUserReviews(reviewText);\n    };\n\n    const processUserInfo = () => {\n      if (isLoggedIn) {\n        console.log(`User ID: ${userId}`);\n      } else {\n        console.log('User is not logged in.');\n      }\n    };\n    const [userReviews, setUserReviews] = useState([]);\n\n  \n    //call at beginning of function so that it immediately checks for users instead of only checking after the account is made\n  \n    const [newRating, setNewRating] = useState(0);\n    const [isReviewCreated, setIsReviewCreated] = useState(false);\n    \n    const handleRatingChange = (rating) => {\n      setNewRating(rating); // Update the newRating state\n    };\n\n    const handleCreateReview = () => {\n      console.log(userReviews);\n      console.log(\"idk\" + newRating);\n      console.log(userId);\n      console.log(objectID)\n    \n      if (!isLoggedIn) {\n        alert(\"Please log in to add a review\");\n        return; // Exit the function early if not logged in\n      }\n    \n      // Proceed to create a review if the user is logged in\n      axios.post('http://localhost:7000/comment', {\n        id: userId,\n        review: userReviews,\n        stars: newRating,\n        bookID: objectID,\n        created_at: new Date().toISOString() // Use current date and time\n      })\n      .then(response => {\n        console.log(\"Added review\", response.data);\n        alert(\"Review successfully added\");\n        setIsReviewCreated(true);\n        // fetchUserReviews();\n      })\n      .catch(error => {\n        console.log(\"Didn't add review\", error);\n      });\n    };\n    \n    // Function to fetch user reviews\n    const fetchUserReviews = () => {\n      axios.get('http://localhost:7000/reviews')\n        .then(response => {\n          setUserReviews(response.data); // Update state with the reviews\n          console.log(\"get works\");\n        })\n        .catch(error => {\n          console.error('There was an error fetching the reviews!', error);\n        });\n    };\n    \n    // useEffect to fetch reviews when the component mounts\n    useEffect(() => {\n      fetchUserReviews();\n      setIsReviewCreated(false);\n      console.log(\"why\");\n    }, [isReviewCreated]); // Empty dependency array to run on mount\n    \n    return (\n      <div className='review-container'>\n      <div className=\"reviewBig\">\n        <div>\n          <img src={image} className='reviewImage'></img>\n        </div>\n        <div className='reviewTitle'>\n          <div className='reviewTitle'>\n            <p id='p-title'>{title}</p>\n            <p>{author}</p>\n          </div>\n          <textarea\n            col =\"30\"\n            rows=\"20\"\n            type=\"text\"\n            id='reviewText'\n            placeholder=\"Leave a Review!\"\n            value={reviewText}\n            onChange={handleTextChange}\n          />\n          <div className = \"rateStyle\">\n            <Rate \n            starR = {newRating}\n            onRatingChange={handleRatingChange}\n            >  \n            </Rate>\n          </div>\n          <button id=\"reviewButton\" onClick={handleCreateReview}>Save</button>\n        </div>\n      </div>\n\n      </div>\n      \n    );\n\n  };\n\n\n  export default Review;\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}