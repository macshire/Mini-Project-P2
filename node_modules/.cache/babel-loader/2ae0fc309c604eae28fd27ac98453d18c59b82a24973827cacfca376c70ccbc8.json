{"ast":null,"code":"import { FILTER_GENRE, STORY_ARCHIVE, SEARCH_BOOK, REVIEW_BOOK, DISPLAY_ARCHIVE } from '../constants/actionTypes';\nimport archiveStore from '../store/archiveindex';\nconst INITIAL_STATE = [{\n  image: 'https://upload.wikimedia.org/wikipedia/en/d/db/The_Maze_Runner_cover.png',\n  title: 'The Maze Runner',\n  url: 'https://www.penguinrandomhouse.com/series/MZR/the-maze-runner-series/',\n  author: 'James Dashner',\n  num_comments: 15,\n  points: 8,\n  objectID: 5,\n  genre: 'Adventure'\n}];\nconst applyArchiveStory = (state, action) => {\n  console.log(action);\n  //use this code for when implementing with actual API, filter code is right\n  // newDataFilter = api.fetch(\"xxxx?q=${book.objectID}\")\n  // return newDateFilter;\n  return state.filter(book => {\n    return action.id != book.objectID;\n  });\n};\nconst applyFilterStory = (state, action) => {\n  console.log(action);\n  return state.filter(book => {\n    return action.genre == book.genre;\n  });\n};\nconst applySearchStory = (state, action) => {\n  console.log(action);\n  /* toLowerCase() make it possible for lower case search */\n  /* includes() make it possible for search with fewer words */\n  return state.filter(book => {\n    return book.title.toLowerCase().includes(action.title.toLowerCase());\n  });\n};\nconst applyReviewStory = (state, action) => {\n  console.log(action);\n  return state.filter(book => {\n    return action.id === book.objectID;\n  });\n};\nconst applyDisplayStory = (state, action) => {\n  console.log(action);\n  return state.filter(book => {\n    return action.id != book.objectID;\n  });\n};\nfunction archiveStoryReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case STORY_ARCHIVE:\n      {\n        return applyArchiveStory(state, action);\n      }\n    case FILTER_GENRE:\n      {\n        return applyFilterStory(state, action);\n      }\n    case SEARCH_BOOK:\n      {\n        return applySearchStory(state, action);\n      }\n    case REVIEW_BOOK:\n      {\n        return applyReviewStory(state, action);\n      }\n    case DISPLAY_ARCHIVE:\n      {\n        return applyDisplayStory(state, action);\n      }\n    default:\n      return state;\n  }\n}\nexport default archiveStoryReducer;","map":{"version":3,"names":["FILTER_GENRE","STORY_ARCHIVE","SEARCH_BOOK","REVIEW_BOOK","DISPLAY_ARCHIVE","archiveStore","INITIAL_STATE","image","title","url","author","num_comments","points","objectID","genre","applyArchiveStory","state","action","console","log","filter","book","id","applyFilterStory","applySearchStory","toLowerCase","includes","applyReviewStory","applyDisplayStory","archiveStoryReducer","type"],"sources":["/home/maximilian/Desktop/Mini-Project/src/reducers/archiveStory.js"],"sourcesContent":["import { FILTER_GENRE, STORY_ARCHIVE, SEARCH_BOOK, REVIEW_BOOK, DISPLAY_ARCHIVE } from '../constants/actionTypes';\nimport archiveStore from '../store/archiveindex';\n\nconst INITIAL_STATE = [\n    {\n        image: 'https://upload.wikimedia.org/wikipedia/en/d/db/The_Maze_Runner_cover.png',\n        title: 'The Maze Runner',\n        url: 'https://www.penguinrandomhouse.com/series/MZR/the-maze-runner-series/',\n        author: 'James Dashner',\n        num_comments: 15,\n        points: 8,\n        objectID: 5,\n        genre: 'Adventure'\n    }\n];\n\nconst applyArchiveStory = (state, action) => { \n  console.log(action)\n  //use this code for when implementing with actual API, filter code is right\n  // newDataFilter = api.fetch(\"xxxx?q=${book.objectID}\")\n  // return newDateFilter;\n  return state.filter((book) => {return action.id != book.objectID})\n}\n\nconst applyFilterStory = (state, action) => { \n  console.log(action)\n  return state.filter((book) => {return action.genre == book.genre})\n}\n\nconst applySearchStory = (state, action) => { \n  console.log(action)\n  /* toLowerCase() make it possible for lower case search */\n  /* includes() make it possible for search with fewer words */\n  return state.filter((book) => {return book.title.toLowerCase().includes(action.title.toLowerCase())})\n}\n\nconst applyReviewStory = (state, action) => {\n  console.log(action)\n  return state.filter((book) => {return action.id === book.objectID})\n}\n  \nconst applyDisplayStory = (state, action) => {\n  console.log(action)\n  return state.filter((book) => {return action.id != book.objectID})\n}\n\nfunction archiveStoryReducer(state = INITIAL_STATE, action) {\n    switch(action.type) {\n      case STORY_ARCHIVE: {\n        return applyArchiveStory(state, action);\n      }\n      case FILTER_GENRE: {\n        return applyFilterStory(state, action);\n      }\n      case SEARCH_BOOK: {\n        return applySearchStory(state, action);\n      }\n      case REVIEW_BOOK: {\n        return applyReviewStory(state, action);\n      }\n      case DISPLAY_ARCHIVE: {\n        return applyDisplayStory(state, action);\n      }\n      default : return state;\n    }\n  }\n  \n  export default archiveStoryReducer;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,WAAW,EAAEC,eAAe,QAAQ,0BAA0B;AACjH,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,MAAMC,aAAa,GAAG,CAClB;EACIC,KAAK,EAAE,0EAA0E;EACjFC,KAAK,EAAE,iBAAiB;EACxBC,GAAG,EAAE,uEAAuE;EAC5EC,MAAM,EAAE,eAAe;EACvBC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,CAAC;EACXC,KAAK,EAAE;AACX,CAAC,CACJ;AAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB;EACA;EACA;EACA,OAAOD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;IAAC,OAAOJ,MAAM,CAACK,EAAE,IAAID,IAAI,CAACR,QAAQ;EAAA,CAAC,CAAC;AACpE,CAAC;AAED,MAAMU,gBAAgB,GAAGA,CAACP,KAAK,EAAEC,MAAM,KAAK;EAC1CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;IAAC,OAAOJ,MAAM,CAACH,KAAK,IAAIO,IAAI,CAACP,KAAK;EAAA,CAAC,CAAC;AACpE,CAAC;AAED,MAAMU,gBAAgB,GAAGA,CAACR,KAAK,EAAEC,MAAM,KAAK;EAC1CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB;EACA;EACA,OAAOD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;IAAC,OAAOA,IAAI,CAACb,KAAK,CAACiB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACT,MAAM,CAACT,KAAK,CAACiB,WAAW,CAAC,CAAC,CAAC;EAAA,CAAC,CAAC;AACvG,CAAC;AAED,MAAME,gBAAgB,GAAGA,CAACX,KAAK,EAAEC,MAAM,KAAK;EAC1CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;IAAC,OAAOJ,MAAM,CAACK,EAAE,KAAKD,IAAI,CAACR,QAAQ;EAAA,CAAC,CAAC;AACrE,CAAC;AAED,MAAMe,iBAAiB,GAAGA,CAACZ,KAAK,EAAEC,MAAM,KAAK;EAC3CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;IAAC,OAAOJ,MAAM,CAACK,EAAE,IAAID,IAAI,CAACR,QAAQ;EAAA,CAAC,CAAC;AACpE,CAAC;AAED,SAASgB,mBAAmBA,CAACb,KAAK,GAAGV,aAAa,EAAEW,MAAM,EAAE;EACxD,QAAOA,MAAM,CAACa,IAAI;IAChB,KAAK7B,aAAa;MAAE;QAClB,OAAOc,iBAAiB,CAACC,KAAK,EAAEC,MAAM,CAAC;MACzC;IACA,KAAKjB,YAAY;MAAE;QACjB,OAAOuB,gBAAgB,CAACP,KAAK,EAAEC,MAAM,CAAC;MACxC;IACA,KAAKf,WAAW;MAAE;QAChB,OAAOsB,gBAAgB,CAACR,KAAK,EAAEC,MAAM,CAAC;MACxC;IACA,KAAKd,WAAW;MAAE;QAChB,OAAOwB,gBAAgB,CAACX,KAAK,EAAEC,MAAM,CAAC;MACxC;IACA,KAAKb,eAAe;MAAE;QACpB,OAAOwB,iBAAiB,CAACZ,KAAK,EAAEC,MAAM,CAAC;MACzC;IACA;MAAU,OAAOD,KAAK;EACxB;AACF;AAEA,eAAea,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}