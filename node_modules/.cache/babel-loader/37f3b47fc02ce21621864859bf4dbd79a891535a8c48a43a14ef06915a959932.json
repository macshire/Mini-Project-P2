{"ast":null,"code":"var _jsxFileName = \"/home/maximilian/Desktop/Mini-Project/src/components/Reviews/index.js\",\n  _s = $RefreshSig$();\nimport '../About.css';\nimport { Rate } from './StarRating';\nimport { useOutletContext } from 'react-router-dom';\nimport booksData from '../../data/booksData';\nimport InputLabel from '@mui/material/InputLabel';\nimport About from '../About';\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nimport axios from 'axios';\nimport '../Layout';\nimport StarRating from './StarRating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Review = ({\n  review,\n  users\n}) => {\n  _s();\n  const {\n    title,\n    url,\n    author,\n    num_comments,\n    image,\n    points,\n    objectID\n  } = review;\n  const [reviewText, setReviewText] = useState('');\n  const {\n    userLoggedIn,\n    userId\n  } = useOutletContext();\n  console.log('User Logged In:', userLoggedIn);\n  console.log('User ID:', userId);\n  const handleTextChange = event => {\n    setReviewText(event.target.value); // Update state with the textarea value\n    setUserReviews(reviewText);\n  };\n  const processUserInfo = () => {\n    if (userLoggedIn) {\n      console.log(`User ID: ${userId}`);\n    } else {\n      console.log('User is not logged in.');\n    }\n  };\n  const [userReviews, setUserReviews] = useState([]);\n  const fetchUserReviews = () => {\n    axios.get('http://localhost:7000/reviews').then(response => {\n      setUserReviews(response.data); // Update state with the user data\n    }).catch(error => {\n      console.error('There was an error fetching the reviews!', error);\n    });\n  };\n\n  //call at beginning of function so that it immediately checks for users instead of only checking after the account is made\n\n  const [newRating, setNewRating] = useState(0);\n  const handleRatingChange = rating => {\n    setNewRating(rating); // Update the newRating state\n  };\n  const handleCreateReview = () => {\n    console.log(userReviews);\n    console.log(\"idk\" + newRating);\n    console.log(userId);\n    if (userLoggedIn) {\n      // setShow(false);\n      //add logic to send post to db in order to create a new user\n      //creating a new user in DB\n      axios.post('http://localhost:7000/register', {\n        id: userId,\n        review: userReviews,\n        stars: newRating,\n        created_at: 'now'\n      }).then(response => {\n        console.log(\"ADded review\", response.data);\n        fetchUserReviews();\n      }).catch(error => {\n        console.log(\"didnt add review\", error);\n      });\n    } else if (!userLoggedIn) {\n      alert(\"please log in\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviewBig\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          className: \"reviewImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviewTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviewTitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p-title\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          col: \"30\",\n          rows: \"20\",\n          type: \"text\",\n          id: \"reviewText\",\n          placeholder: \"Leave a Review!\",\n          value: reviewText,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rateStyle\",\n          children: /*#__PURE__*/_jsxDEV(Rate, {\n            starR: newRating,\n            onRatingChange: handleRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"reviewButton\",\n          onClick: handleCreateReview,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n  return {\n    processUserInfo\n  };\n};\n_s(Review, \"Yr3+Qn7AWYWhHWzeFoOZoZPlYhE=\", false, function () {\n  return [useOutletContext];\n});\n_c = Review;\nexport default Review;\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["Rate","useOutletContext","booksData","InputLabel","About","React","useEffect","useState","createContext","useContext","axios","StarRating","jsxDEV","_jsxDEV","Review","review","users","_s","title","url","author","num_comments","image","points","objectID","reviewText","setReviewText","userLoggedIn","userId","console","log","handleTextChange","event","target","value","setUserReviews","processUserInfo","userReviews","fetchUserReviews","get","then","response","data","catch","error","newRating","setNewRating","handleRatingChange","rating","handleCreateReview","post","id","stars","created_at","alert","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","col","rows","type","placeholder","onChange","starR","onRatingChange","onClick","_c","$RefreshReg$"],"sources":["/home/maximilian/Desktop/Mini-Project/src/components/Reviews/index.js"],"sourcesContent":["import '../About.css';\nimport { Rate } from './StarRating';\nimport { useOutletContext } from 'react-router-dom';\n\nimport booksData from '../../data/booksData';\nimport InputLabel from '@mui/material/InputLabel';\nimport About from '../About';\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nimport axios from 'axios';\nimport '../Layout';\nimport StarRating from './StarRating';\nconst Review = ({ review, users}) => {\n    const {\n      title,\n      url,\n      author,\n      num_comments,\n      image,\n      points,\n      objectID,\n    } = review;\n\n    const [reviewText, setReviewText] = useState('');\n    const { userLoggedIn, userId } = useOutletContext();\n    console.log('User Logged In:', userLoggedIn);\n    console.log('User ID:', userId);\n    const handleTextChange = (event) => {\n      setReviewText(event.target.value); // Update state with the textarea value\n      setUserReviews(reviewText);\n    };\n\n    const processUserInfo = () => {\n      if (userLoggedIn) {\n        console.log(`User ID: ${userId}`);\n      } else {\n        console.log('User is not logged in.');\n      }\n    };\n    const [userReviews, setUserReviews] = useState([]);\n\n    const fetchUserReviews = () => {\n      axios.get('http://localhost:7000/reviews')\n        .then(response => {\n           setUserReviews(response.data); // Update state with the user data\n        })\n        .catch(error => {\n          console.error('There was an error fetching the reviews!', error);\n        });\n    };\n    \n    //call at beginning of function so that it immediately checks for users instead of only checking after the account is made\n  \n    const [newRating, setNewRating] = useState(0);\n    \n    const handleRatingChange = (rating) => {\n      setNewRating(rating); // Update the newRating state\n    };\n    const handleCreateReview = () => {\n\n      console.log(userReviews)\n      console.log(\"idk\" + newRating);\n      console.log(userId);\n      if(userLoggedIn){\n      // setShow(false);\n      //add logic to send post to db in order to create a new user\n      //creating a new user in DB\n      axios.post('http://localhost:7000/register', {\n        id: userId,\n        review: userReviews,\n        stars: newRating,\n        created_at: 'now'\n\n      }).then(response => {\n        console.log(\"ADded review\", response.data);\n\n        fetchUserReviews();\n       }).catch(error => {\n        console.log(\"didnt add review\", error);\n      })\n      }\n      else if (!userLoggedIn){\n        alert(\"please log in\");\n      }   \n    };\n\n    \n    return (\n      <div className='review-container'>\n      <div className=\"reviewBig\">\n        <div>\n          <img src={image} className='reviewImage'></img>\n        </div>\n        <div className='reviewTitle'>\n          <div className='reviewTitle'>\n            <p id='p-title'>{title}</p>\n            <p>{author}</p>\n          </div>\n          <textarea\n            col =\"30\"\n            rows=\"20\"\n            type=\"text\"\n            id='reviewText'\n            placeholder=\"Leave a Review!\"\n            value={reviewText}\n            onChange={handleTextChange}\n          />\n          <div className = \"rateStyle\">\n            <Rate \n            starR = {newRating}\n            onRatingChange={handleRatingChange}\n            >  \n            </Rate>\n          </div>\n          <button id=\"reviewButton\" onClick={handleCreateReview}>Save</button>\n        </div>\n      </div>\n\n      </div>\n      \n    );\n    return {\n      processUserInfo,\n    };\n  };\n\n\n  export default Review;\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}